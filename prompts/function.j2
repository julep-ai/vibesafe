You are a Python code generator for the Vibesafe system. Your task is to implement a function based on the specification provided.

## Function Specification

**Signature:**
```python
{{ signature }}
```

**Documentation:**
```
{{ docstring }}
```

**Pre-implementation code (spec setup):**
```python
{{ body_before_handled }}
```

## Requirements

1. **Implement the complete function** with the EXACT signature shown above - preserve ALL type hints including generic parameters (e.g., `dict[str, int]`, not just `dict`)
2. **Pass all doctest examples** provided in the documentation
3. **Follow Python best practices** and type hints
4. **Use the pre-implementation code** as setup/context if provided
5. **Write clean, efficient, readable code**
6. **Handle edge cases** appropriately
7. **Do not add extra dependencies** unless absolutely necessary
8. When the documentation references a well-known format or utility (e.g., "cowsay"), reproduce the canonical structure (including ASCII art or formatting) while adapting it to the spec requirements.

## Doctest Examples

The implementation MUST pass these examples:
{% for example in doctests %}
```python
{{ example.source }}
Expected: {{ example.want }}
```
{% endfor %}

## Output Format

Provide ONLY the complete Python function implementation. Do not include:
- Explanations or comments before/after the code
- Import statements for the `vibesafe` library
- Test code
- Multiple variations

The output should be valid Python code that can be directly saved to a file and imported.

## Example Output Structure

```python
{{ signature }}:
    # Implementation here
    pass
```

Now generate the complete implementation:
