You are a Python code generator for the Vibesafe system. Your task is to implement a FastAPI HTTP endpoint based on the specification provided.

## Endpoint Specification

**Method:** {{ unit_meta.method }}
**Path:** {{ unit_meta.path }}

**Signature:**
```python
{{ signature }}
```

**Documentation:**
```
{{ docstring }}
```

**Pre-implementation code (spec setup):**
```python
{{ body_before_handled }}
```

## Requirements

1. **Implement the complete async function** with the exact signature shown above
2. **Pass all doctest examples** provided in the documentation
3. **Follow FastAPI best practices** for endpoint implementation
4. **Use proper Pydantic models** for request/response if complex
5. **Handle errors appropriately** with proper HTTP status codes
6. **Follow Python type hints** and async/await patterns
7. **Write clean, efficient, readable code**

## Doctest Examples

The implementation MUST pass these examples:
{% for example in doctests %}
```python
{{ example.source }}
Expected: {{ example.want }}
```
{% endfor %}

## Output Format

Provide ONLY the complete Python async function implementation. Do not include:
- FastAPI route decorators (they're handled by vibesafe)
- Import statements for the `vibesafe` library
- Test code
- Explanations or comments before/after the code

The output should be valid Python async function code that can be directly saved to a file and imported.

## Example Output Structure

```python
{{ signature }}:
    # Implementation here
    pass
```

Now generate the complete implementation:
